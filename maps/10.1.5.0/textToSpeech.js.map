{"version":3,"file":"../../background/textToSpeech.js","names":["creating","setupOffscreenDocument","path","chrome","offscreenUrl","runtime","getURL","existingContexts","getContexts","contextTypes","documentUrls","length","offscreen","createDocument","url","reasons","justification","onMessage","addListener","request","sender","sendResponse","action","then","twpConfig","get","sendMessage","text","targetLanguage","response","onReady","onChanged","name","newvalue","speed","volume"],"sources":["textToSpeech.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n  let creating; // A global promise to avoid concurrency issues\r\n  async function setupOffscreenDocument(path) {\r\n    if (!(\"offscreen\" in chrome)) {\r\n      return;\r\n    }\r\n    // Check all windows controlled by the service worker to see if one\r\n    // of them is the offscreen document with the given path\r\n    const offscreenUrl = chrome.runtime.getURL(path);\r\n    const existingContexts = await chrome.runtime.getContexts({\r\n      contextTypes: ['OFFSCREEN_DOCUMENT'],\r\n      documentUrls: [offscreenUrl]\r\n    });\r\n  \r\n    if (existingContexts.length > 0) {\r\n      return;\r\n    }\r\n  \r\n    // create offscreen document\r\n    if (creating) {\r\n      await creating;\r\n    } else {\r\n      creating = chrome.offscreen.createDocument({\r\n        url: path,\r\n        reasons: ['AUDIO_PLAYBACK'],\r\n        justification: 'Enable text-to-speech functionality on any website.',\r\n      });\r\n      await creating;\r\n      creating = null;\r\n    }\r\n  }\r\n\r\n\r\n  // Listen for messages coming from contentScript or other scripts.\r\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    if (request.action === \"textToSpeech\") {\r\n      setupOffscreenDocument('off_screen.html')\r\n        .then(() => {\r\n          if (twpConfig.get(\"textToSpeechService\") === \"bing\") {\r\n            chrome.runtime.sendMessage({ action: \"offscreen_bing_textToSpeech\", text: request.text, targetLanguage: request.targetLanguage }, \r\n              (response) => {\r\n                sendResponse();\r\n              });\r\n          } else {\r\n            chrome.runtime.sendMessage({ action: \"offscreen_google_textToSpeech\", text: request.text, targetLanguage: request.targetLanguage }, \r\n              (response) => {\r\n                sendResponse();\r\n              });\r\n          }\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"stopAudio\") {\r\n      setupOffscreenDocument('off_screen.html')\r\n        .then(() => {\r\n          chrome.runtime.sendMessage({ action: \"offscreen_google_stopAll\" });\r\n          chrome.runtime.sendMessage({ action: \"offscreen_bing_stopAll\" });\r\n          // return chrome.offscreen.closeDocument();\r\n        });\r\n    }\r\n  });\r\n\r\n  // Listen for changes to the audio speed setting and apply it immediately.\r\n  twpConfig.onReady(async () => {\r\n    twpConfig.onChanged((name, newvalue) => {\r\n      if (name === \"ttsSpeed\") {\r\n        chrome.runtime.sendMessage({ action: \"offscreen_google_ttsSpeed\", speed: newvalue });\r\n        chrome.runtime.sendMessage({ action: \"offscreen_bing_ttsSpeed\", speed: newvalue });\r\n      } else if (name === \"ttsVolume\") {\r\n        chrome.runtime.sendMessage({ action: \"offscreen_google_ttsVolume\", volume: newvalue });\r\n        chrome.runtime.sendMessage({ action: \"offscreen_bing_ttsVolume\", volume: newvalue });\r\n      } else if (name === \"proxyServers\") {\r\n        // const proxyServers = newvalue;\r\n        // if (proxyServers?.google?.ttsServer) {\r\n        //   const url = new URL(googleService.baseURL);\r\n        //   url.host = proxyServers.google.ttsServer;\r\n        //   googleService.baseURL = url.toString();\r\n        // } else {\r\n        //   const url = new URL(googleService.baseURL);\r\n        //   url.host = \"translate.google.com\";\r\n        //   googleService.baseURL = url.toString();\r\n        // }\r\n      }\r\n    });\r\n\r\n    chrome.runtime.sendMessage({ action: \"offscreen_google_ttsSpeed\", speed: twpConfig.get(\"ttsSpeed\") });\r\n    chrome.runtime.sendMessage({ action: \"offscreen_bing_ttsSpeed\", speed: twpConfig.get(\"ttsSpeed\") });\r\n    chrome.runtime.sendMessage({ action: \"offscreen_google_ttsVolume\", volume: twpConfig.get(\"ttsVolume\") });\r\n    chrome.runtime.sendMessage({ action: \"offscreen_bing_ttsVolume\", volume: twpConfig.get(\"ttsVolume\") });\r\n\r\n    // const proxyServers = twpConfig.get(\"proxyServers\");\r\n    // if (proxyServers?.google?.ttsServer) {\r\n    //   const url = new URL(googleService.baseURL);\r\n    //   url.host = proxyServers.google.ttsServer;\r\n    //   googleService.baseURL = url.toString();\r\n    // }\r\n  });\r\n})();\r\n"],"mappings":"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","ignoreList":[]}